return(function(...)local a="Protected with CDEDG Obfuscator Release v0.1"local b={...}local c={debug.info,"",nil,debug.getinfo,os}local d=bit or bit32;local e;local f;local g;local h=50;local i={[22]=18,[31]=8,[33]=28,[0]=3,[1]=13,[2]=23,[26]=33,[12]=1,[13]=6,[14]=10,[15]=16,[16]=20,[17]=26,[18]=30,[19]=36,[3]=0,[4]=2,[5]=4,[6]=7,[7]=9,[8]=12,[9]=14,[10]=17,[20]=19,[21]=22,[23]=24,[24]=27,[25]=29,[27]=32,[32]=34,[34]=37,[11]=5,[28]=11,[29]=15,[30]=21,[35]=25,[36]=31,[37]=35}local j={[0]='ABC','ABx','ABC','ABC','ABC','ABx','ABC','ABx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','ABC','ABC','ABC','ABC','ABC','ABC','ABC','ABC','AsBx','AsBx','ABC','ABC','ABC','ABx','ABC'}local k={[0]={b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgN'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgU',c='OpArgU'},{b='OpArgR',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgR'},{b='OpArgR',c='OpArgN'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgK',c='OpArgK'},{b='OpArgR',c='OpArgU'},{b='OpArgR',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgU',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgR',c='OpArgN'},{b='OpArgN',c='OpArgU'},{b='OpArgU',c='OpArgU'},{b='OpArgN',c='OpArgN'},{b='OpArgU',c='OpArgN'},{b='OpArgU',c='OpArgN'}}local function l(m,n,o,p)local q=0;for r=n,o,p do local s=256^math.abs(r-n)q=q+s*string.byte(m,r,r)end;return q end;local function t(u,v,w,x)local y=(-1)^d.rshift(x,7)local z=d.rshift(w,7)+d.lshift(d.band(x,0x7F),1)local A=u+d.lshift(v,8)+d.lshift(d.band(w,0x7F),16)local B=1;if z==0 then if A==0 then return y*0 else B=0;z=1 end elseif z==0x7F then if A==0 then return y*1/0 else return y*0/0 end end;return y*2^(z-127)*(1+B/2^23)end;local function C(D,E,F,G,H,I,J,K)local L=(-1)^d.rshift(K,7)local M=d.lshift(d.band(K,0x7F),4)+d.rshift(J,4)local N=d.band(J,0x0F)*2^48;local O=1;N=N+I*2^40+H*2^32+G*2^24+F*2^16+E*2^8+D;if M==0 then if N==0 then return L*0 else O=0;M=1 end elseif M==0x7FF then if N==0 then return L*1/0 else return L*0/0 end end;return L*2^(M-1023)*(O+N/2^52)end;local function P(Q,R,S)return l(Q,R,S-1,1)end;local function T(U,V,W)return l(U,W-1,V,-1)end;local function X(Y,Z)return t(string.byte(Y,Z,Z+3))end;local function _(a0,a1)local a2,a3,a4,a5=string.byte(a0,a1,a1+3)return t(a5,a4,a3,a2)end;local function a6(a7,a8)return C(string.byte(a7,a8,a8+7))end;local function a9(aa,ab)local ac,ad,ae,af,ag,ah,ai,aj=string.byte(aa,ab,ab+7)return C(aj,ai,ah,ag,af,ae,ad,ac)end;local ak={[4]={little=X,big=_},[8]={little=a6,big=a9}}local function al(am)local an=am.index;local ao=string.byte(am.source,an,an)am.index=an+1;return ao end;local function ap(aq,ar)local as=aq.index+ar;local at=string.sub(aq.source,aq.index,as-1)aq.index=as;return at end;local function au(av)local aw=av:s_szt()local ax;if aw~=0 then ax=string.sub(ap(av,aw),1,-2)end;return ax end;local function ay(az,aA)return function(aB)local aC=aB.index+az;local aD=aA(aB.source,aB.index,aC)aB.index=aC;return aD end end;local function aE(aF,aG)return function(aH)local aI=aG(aH.source,aH.index)aH.index=aH.index+aF;return aI end end;local function aJ(aK)local aL=aK:s_int()local aM=b[4](aL)for aN=1,aL do local aO=aK:s_ins()local aP=d.band(aO,0x3F)local aQ=j[aP]local aR=k[aP]local aS={value=aO,op=i[aP],A=d.band(d.rshift(aO,6),0xFF)}if aQ=='ABC'then aS.B=d.band(d.rshift(aO,23),0x1FF)aS.C=d.band(d.rshift(aO,14),0x1FF)aS.is_KB=aR.b=='OpArgK'and aS.B>0xFF;aS.is_KC=aR.c=='OpArgK'and aS.C>0xFF elseif aQ=='ABx'then aS.Bx=d.band(d.rshift(aO,14),0x3FFFF)aS.is_K=aR.b=='OpArgK'elseif aQ=='AsBx'then aS.sBx=d.band(d.rshift(aO,14),0x3FFFF)-131071 end;aM[aN]=aS end;return aM end;local function aT(aU)local aV=aU:s_int()local aW=b[4](aV)for aX=1,aV do local aY=al(aU)local aZ;if aY==1 then aZ=al(aU)~=0 elseif aY==3 then aZ=aU:s_num()elseif aY==4 then aZ=au(aU)end;aW[aX]=aZ end;return aW end;local function a_(b0,b1)local b2=b0:s_int()local b3=b[4](b2)for b4=1,b2 do b3[b4]=g(b0,b1)end;return b3 end;local function b5(b6)local b7=b6:s_int()local b8=b[4](b7)for b9=1,b7 do b8[b9]=b6:s_int()end;return b8 end;local function ba(bb)local bc=bb:s_int()local bd=b[4](bc)for be=1,bc do bd[be]={varname=au(bb),startpc=bb:s_int(),endpc=bb:s_int()}end;return bd end;local function bf(bg)local bh=bg:s_int()local bi=b[4](bh)for bj=1,bh do bi[bj]=au(bg)end;return bi end;function g(bk,bl)local bm={}local bn=au(bk)or bl;bm.source=bn;bk:s_int()bk:s_int()bm.num_upval=al(bk)bm.num_param=al(bk)al(bk)bm.max_stack=al(bk)bm.code=aJ(bk)bm.const=aT(bk)bm.subs=a_(bk,bn)bm.lines=b5(bk)ba(bk)bf(bk)for bo,bp in ipairs(bm.code)do if bp.is_K then bp.const=bm.const[bp.Bx+1]else if bp.is_KB then bp.const_B=bm.const[bp.B-0xFF]end;if bp.is_KC then bp.const_C=bm.const[bp.C-0xFF]end end end;return bm end;local function bq(br,bs)for bt,bu in pairs(br)do if bu.index>=bs then bu.value=bu.store[bu.index]bu.store=bu;bu.index='value'br[bt]=nil end end end;local function bv(bw,bx,by)local bz=bw.code;local bA=bw.subs;local bB=bw.vararg;local bC=-1;local bD={}local bE=bw.memory;local bF=bw.pc;while true do local bG=bz[bF]local bH=bG.op;bF=bF+1;if bH<18 then if bH<8 then if bH<3 then if bH<1 then for bI=bG.A,bG.B do bE[bI]=nil end elseif bH>1 then local bJ=by[bG.B]bE[bG.A]=bJ.store[bJ.index]else local bK,bL;if bG.is_KB then bK=bG.const_B else bK=bE[bG.B]end;if bG.is_KC then bL=bG.const_C else bL=bE[bG.C]end;bE[bG.A]=bK+bL end elseif bH>3 then if bH<6 then if bH>4 then local bM=bG.A;local bN=bG.B;local bO;if bG.is_KC then bO=bG.const_C else bO=bE[bG.C]end;bE[bM+1]=bE[bN]bE[bM]=bE[bN][bO]else bE[bG.A]=bx[bG.const]end elseif bH>6 then local bP;if bG.is_KC then bP=bG.const_C else bP=bE[bG.C]end;bE[bG.A]=bE[bG.B][bP]else local bQ,bR;if bG.is_KB then bQ=bG.const_B else bQ=bE[bG.B]end;if bG.is_KC then bR=bG.const_C else bR=bE[bG.C]end;bE[bG.A]=bQ-bR end else bE[bG.A]=bE[bG.B]end elseif bH>8 then if bH<13 then if bH<10 then bx[bG.const]=bE[bG.A]elseif bH>10 then if bH<12 then local bS=bG.A;local bT=bG.B;local bU=bG.C;local bV;if bT==0 then bV=bC-bS else bV=bT-1 end;local bW=b[2](bE[bS](b[3](bE,bS+1,bS+bV)))local bX=bW.n;if bU==0 then bC=bS+bX-1 else bX=bU-1 end;b[1](bW,1,bX,bS,bE)else local bY=by[bG.B]bY.store[bY.index]=bE[bG.A]end else local bZ,b_;if bG.is_KB then bZ=bG.const_B else bZ=bE[bG.B]end;if bG.is_KC then b_=bG.const_C else b_=bE[bG.C]end;bE[bG.A]=bZ*b_ end elseif bH>13 then if bH<16 then if bH>14 then local c0=bG.A;local c1=bG.B;local c2;if c1==0 then c2=bC-c0 else c2=c1-1 end;bq(bD,0)return bE[c0](b[3](bE,c0+1,c0+c2))else local c3,c4;if bG.is_KB then c3=bG.const_B else c3=bE[bG.B]end;if bG.is_KC then c4=bG.const_C else c4=bE[bG.C]end;bE[bG.A][c3]=c4 end elseif bH>16 then bE[bG.A]={}else local c5,c6;if bG.is_KB then c5=bG.const_B else c5=bE[bG.B]end;if bG.is_KC then c6=bG.const_C else c6=bE[bG.C]end;bE[bG.A]=c5/c6 end else bE[bG.A]=bG.const end else local c7=bG.A;local c8=bE[c7+2]local c9=bE[c7]+c8;local ca=bE[c7+1]local cb;if c8==math.abs(c8)then cb=c9<=ca else cb=c9>=ca end;if cb then bE[c7]=c9;bE[c7+3]=c9;bF=bF+bG.sBx end end elseif bH>18 then if bH<28 then if bH<23 then if bH<20 then bE[bG.A]=#bE[bG.B]elseif bH>20 then if bH<22 then local cc=bG.A;local cd=bG.B;local ce;if cd==0 then ce=bC-cc+1 else ce=cd-1 end;bq(bD,0)return b[3](bE,cc,cc+ce-1)else local cf=bG.B;local cg=bE[cf]for ch=cf+1,bG.C do cg=cg..bE[ch]end;bE[bG.A]=cg end else local ci,cj;if bG.is_KB then ci=bG.const_B else ci=bE[bG.B]end;if bG.is_KC then cj=bG.const_C else cj=bE[bG.C]end;bE[bG.A]=ci%cj end elseif bH>23 then if bH<26 then if bH>24 then bq(bD,bG.A)else local ck,cl;if bG.is_KB then ck=bG.const_B else ck=bE[bG.B]end;if bG.is_KC then cl=bG.const_C else cl=bE[bG.C]end;if ck==cl==(bG.A~=0)then bF=bF+bz[bF].sBx end;bF=bF+1 end elseif bH>26 then local cm,cn;if bG.is_KB then cm=bG.const_B else cm=bE[bG.B]end;if bG.is_KC then cn=bG.const_C else cn=bE[bG.C]end;if cm<cn==(bG.A~=0)then bF=bF+bz[bF].sBx end;bF=bF+1 else local co,cp;if bG.is_KB then co=bG.const_B else co=bE[bG.B]end;if bG.is_KC then cp=bG.const_C else cp=bE[bG.C]end;bE[bG.A]=co^cp end else bE[bG.A]=bG.B~=0;if bG.C~=0 then bF=bF+1 end end elseif bH>28 then if bH<33 then if bH<30 then local cq,cr;if bG.is_KB then cq=bG.const_B else cq=bE[bG.B]end;if bG.is_KC then cr=bG.const_C else cr=bE[bG.C]end;if cq<=cr==(bG.A~=0)then bF=bF+bz[bF].sBx end;bF=bF+1 elseif bH>30 then if bH<32 then local cs=bA[bG.Bx+1]local ct=cs.num_upval;local cu;if ct~=0 then cu={}for cv=1,ct do local cw=bz[bF+cv-1]if cw.op==3 then local cx=bD[cw.B]if not cx then cx={index=cw.B,store=bE}bD[cw.B]=cx end;cu[cv-1]=cx elseif cw.op==2 then cu[cv-1]=by[cw.B]end end;bF=bF+ct end;bE[bG.A]=f(cs,bx,cu)else local cy=bG.A;local cz=bG.B;if not bE[cz]~=(bG.C~=0)then bE[cy]=bE[cz]bF=bF+bz[bF].sBx end;bF=bF+1 end else bE[bG.A]=-bE[bG.B]end elseif bH>33 then if bH<36 then if bH>34 then local cA=bG.A;local cB=bG.B;if cB==0 then cB=bB.len;bC=cA+cB-1 end;b[1](bB.list,1,cB,cA,bE)else local cC=bG.A;local cD,cE,cF;cD=assert(tonumber(bE[cC]),'`for` initial value must be a number')cE=assert(tonumber(bE[cC+1]),'`for` limit must be a number')cF=assert(tonumber(bE[cC+2]),'`for` step must be a number')bE[cC]=cD-cF;bE[cC+1]=cE;bE[cC+2]=cF;bF=bF+bG.sBx end elseif bH>36 then local cG=bG.A;local cH=bG.C;local cI=bG.B;local cJ=bE[cG]local cK;if cI==0 then cI=bC-cG end;if cH==0 then cH=bG[bF].value;bF=bF+1 end;cK=(cH-1)*h;b[1](bE,cG+1,cG+cI,cK+1,cJ)else bE[bG.A]=not bE[bG.B]end else if not bE[bG.A]~=(bG.C~=0)then bF=bF+bz[bF].sBx end;bF=bF+1 end else local cL=bG.A;local cM=cL+3;local cN={bE[cL](bE[cL+1],bE[cL+2])}b[1](cN,1,bG.C,cM,bE)if bE[cM]~=nil then bE[cL+2]=bE[cM]bF=bF+bz[bF].sBx end;bF=bF+1 end else bF=bF+bG.sBx end;bw.pc=bF end end;function f(cO,cP,cQ)local function cR(...)local cS=b[2](...)local cT=b[4](cO.max_stack)local cU={len=0,list={}}b[1](cS,1,cO.num_param,0,cT)if cO.num_param<cS.n then local cV=cO.num_param+1;local cW=cS.n-cO.num_param;cU.len=cW;b[1](cS,cV,cV+cW-1,1,cU.list)end;local cX={vararg=cU,memory=cT,code=cO.code,subs=cO.subs,pc=1}local cY=b[2](pcall(bv,cX,cP,cQ))if cY[1]then return b[3](cY,2,cY.n)else local cZ={pc=cX.pc,source=cO.source,lines=cO.lines}local c_=cZ.source;local d0=cZ.lines[cZ.pc-1]error(string.format('%s:%i: %s',c_,d0,cY[2]),0)return end end;return cR end;local d1;local d2;local d3;local d4;local d5;local d6;local d7;local d8={index=1,source}assert(ap(d8,4)=='\27Lua','invalid Lua signature')assert(al(d8)==0x51,'invalid Lua version')assert(al(d8)==0,'invalid Lua format')d2=al(d8)~=0;d3=al(d8)d4=al(d8)d5=al(d8)d6=al(d8)d7=al(d8)~=0;d1=d2 and P or T;d8.s_int=ay(d3,d1)d8.s_szt=ay(d4,d1)d8.s_ins=ay(d5,d1)if d7 then d8.s_num=ay(d6,d1)elseif ak[d6]then d8.s_num=aE(d6,ak[d6][d2 and'little'or'big'])else error('unsupported float size')end;return f(g(d8,'@virtual'),getfenv(0))()end)(table.move or function(d9,da,db,dc,dd)for de=0,db-da do dd[dc+de]=d9[da+de]end end,table.pack or function(...)return{n=select('#',...),...}end,table.unpack or unpack,table.create or function(df)return{}end)
